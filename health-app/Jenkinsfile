pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Pull code from GitHub
                git 'https://github.com/YuvinD/gopher-industries-health-app.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    // Navigate to the health-app directory and run the Maven package command
                    dir('health-app') {
                        bat "mvn clean package"
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Navigate to the health-app directory and run the Maven test command
                    dir('health-app') {
                        bat "mvn test"
                    }
                }
            }
        }

        stage('Code Quality Analysis') {
            steps {
                // SonarQube Code Analysis
                withSonarQubeEnv('SonarQubeServer') {  // SonarQube server name configured in Jenkins
                    dir('health-app') {
                        bat "mvn sonar:sonar"
                    }
                }
            }
        }

        stage('Archive Artifacts') {
            steps {
                // Archive the JAR file generated in the health-app/target directory
                dir('health-app') {
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Navigate to the root directory where docker-compose.yml is located
                    dir('health-app') {
                        // Build and run Docker containers using docker-compose
                        bat "docker-compose down" // Stop any running containers (cleanup)
                        bat "docker-compose up --build -d" // Build and deploy the containers in detached mode
                    }
                }
            }
        }

        stage('Monitoring and Alerting') {
            steps {
                script {
                    // Example command to configure New Relic monitoring
                    echo "Configuring New Relic for Monitoring and Alerting..."
                    echo "license_key: '57ecbce7260f7e427c462554645678e1FFFFNRAL'"
                    echo "app_name: 'Gopher Industries Health App'"
                }
            }
        }
    }

    post {
        success {
            echo 'Build and deployment completed successfully!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
